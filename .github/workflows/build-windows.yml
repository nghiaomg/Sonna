name: Build Windows

on:
  push:
    branches: [ main, v1 ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, v1 ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    strategy:
      matrix:
        arch: [x64, ia32]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build TypeScript
      run: npm run build:electron
      
    - name: Build frontend
      run: npm run build
      
    - name: Build Windows installer (${{ matrix.arch }})
      run: npm run dist:win -- --${{ matrix.arch }}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build portable version (x64 only)
      if: matrix.arch == 'x64'
      run: npm run dist:portable
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: sonna-windows-${{ matrix.arch }}
        path: |
          release/*.exe
          release/*.zip
        retention-days: 30
        
    - name: Upload portable (x64 only)
      if: matrix.arch == 'x64'
      uses: actions/upload-artifact@v4
      with:
        name: sonna-windows-portable
        path: release/*portable*.exe
        retention-days: 30

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build-windows
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          sonna-windows-x64/*.exe
          sonna-windows-x64/*.zip
          sonna-windows-ia32/*.exe
          sonna-windows-ia32/*.zip
          sonna-windows-portable/*.exe
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 